#  Списки (Lists): Задачи для самостоятельной работы

#  Задача 1: Клубный фейсконтроль

#  Сценарий: Отфильтровать список возрастов, оставив только тех, кто достиг 18 лет.
#  •	На входе: Список чисел. [25, 17, 18, 31, 16, 22]
#  •	На выходе: Список чисел, прошедших фильтр. [25, 18, 31, 22]
#  Подсказка: Понадобится пустой список для результатов и цикл с условным добавлением.

# list_age = [23, 17, 18, 31, 16, 22, 15, 33]
# numbers = []
# # n = len(list_age)
# for age in list_age:
#    if age >= 18:
#       numbers.append(age)
# print(numbers)


# Задача 2: Магическое превращение

# Сценарий: Заменить в списке одни элементы на другие по заданным правилам ("лягушка" -> "принц", "тыква" -> "карета"), не трогая остальные.
# •	На входе: Список строк. ['камень', 'лягушка', 'вода', 'тыква', 'лягушка']
# •	На выходе: Новый список с результатами замен. ['камень', 'принц', 'вода', 'карета', 'принц']
# Подсказка: Для обработки нескольких разных условий идеально подходит конструкция if/elif/else.

list_1 = ['камень', 'лягушка', 'вода', 'тыква', 'лягушка']
replace_dict = {'лягушка': "принц", 'тыква': "карета"}
for s in range(len(list_1)):
   if list_1[s] in replace_dict:
      list_1[s] = replace_dict[list_1[s]]
print(list_1)


# Задача 3: Перепись в зоопарке

# Сценарий: Посчитать количество элементов двух разных категорий (хищники и травоядные) в одном общем списке.
# •	На входе: Список строк (животных). ['лев', 'зебра', 'тигр', 'жираф', 'волк', 'слон']
# •	На выходе: Два числа — количество элементов каждой категории. "Хищников: 3, Травоядных: 3"
# Подсказка: Чтобы отличить одну категорию от другой, удобно хранить одну из них в отдельной небольшой коллекции для быстрой проверки с помощью оператора in.

animals =  ['лев', 'зебра', 'тигр', 'жираф', 'волк', 'слон']
vegan = ['зебра', 'жираф', 'слон']
predator = ['лев', 'тигр', 'волк']
count_vegan = sum(1 for animal in animals if animal in vegan)
count_predator = sum(1 for animal in animals if animal in predator)
print(f'травоядных: ', count_vegan, '\n''хищников: ', count_predator)


# Задача 4: Горный поход

# Сценарий: У вас есть список высот, которые альпинист фиксировал каждый час. Вам нужно найти самый длинный непрерывный участок, где он только поднимался (каждая следующая высота больше предыдущей).
# •	На входе: Список чисел. [100, 110, 105, 120, 125, 130, 128]
# •	На выходе: Список, представляющий самый длинный подъем. [120, 125, 130]
# Подсказка: Вам понадобятся переменные для отслеживания как текущей, так и самой длинной найденной последовательности

high =  [100, 110, 105, 120, 125, 130, 128]
top = []
for h in range(len(high)):
   if h > h+h:
      top.append[h]
   # else:
   #    continue
   print(top)
